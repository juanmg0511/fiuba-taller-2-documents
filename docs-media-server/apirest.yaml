openapi: "3.0.0"
info:
  title: Chotuve API Reference
  version: 1.0.0
servers:
  - url: https://fiuba-taller-2-media-server.herokuapp.com/
    description: Media Server
paths:
  /status:
    get:
      summary: Gets server health
      tags:
        - health
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Status'
  /ping:
    get:
      summary: Ping server
      tags:
        - health
      responses:
        '200':
          description: OK
          content:
            text/plain:
              schema:
                type: string
                example: "Ping received!"
  /videos/{id}:
    get:
      summary: Gets a specfic video
      tags:
        - videos
      parameters:
        - name: id
          in: path
          required: true
          description: Video id to be deleted
          schema:
            type: string
      responses:
        '200':
          description: Video obtained
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OutputVideo'
        '404':
          description: Video not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '401':
          description: Access error
          headers:
            X-Request-ID:
              schema:
                type: string
              description: Request unique identifier.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"


    delete:
      summary: Deletes video
      tags:
        - videos
      parameters:
        - name: id
          in: path
          required: true
          description: Video id to be deleted
          schema:
            type: string
      responses:
        '200':
          description: Video deleted
          content:
            application/json:
              schema:
                type: string
                example: Successfully deleted video 2c1v3d4d6
        '404':
          description: Video not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '401':
          description: Access error
          headers:
            X-Request-ID:
              schema:
                type: string
              description: Request unique identifier.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"

  /videos:
    get:
      summary: Gets videos
      description: This endpoint also offers a q filter to obtain videos with the id passed as parameter
      parameters:
        - in: query
          name: id
          required: false
          schema:
            type: string
          description: video ID that wants to get
      tags:
        - videos
      responses:
        '200':
          description: A paged array of videos
          content:
            application/json:
              schema:
                type: object
                properties:
                  videos:
                    type: array
                    items:
                      $ref: '#/components/schemas/OutputVideo'
        '401':
          description: Access error
          headers:
            X-Request-ID:
              schema:
                type: string
              description: Request unique identifier.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
    post:
      summary: Adds a new video
      tags:
        - videos
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/InputVideo'
      responses:
        '201':
          description: Video recently added
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OutputVideo'
        '409':
          description: Conflict
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'

        '400':
          description: Bad request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '401':
          description: Access error
          headers:
            X-Request-ID:
              schema:
                type: string
              description: Request unique identifier.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"

  /pictures:
    post:
      summary: Adds a new avatar
      tags:
        - avatars
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/InputAvatar'
      responses:
        '201':
          description: Avatar recently added
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OutputAvatar'
        '409':
          description: Conflict
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'

        '400':
          description: Bad request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '401':
          description: Access error
          headers:
            X-Request-ID:
              schema:
                type: string
              description: Request unique identifier.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"

  /pictures/{id}:
    get:
      summary: Gets a specfic avatar
      tags:
        - avatars
      parameters:
        - name: id
          in: path
          required: true
          description:  Avatar owner's id
          schema:
            type: string
      responses:
        '200':
          description: Avatar obtained
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OutputAvatar'
        '404':
          description: Avatar not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '401':
          description: Access error
          headers:
            X-Request-ID:
              schema:
                type: string
              description: Request unique identifier.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"


    delete:
      summary: Deletes avatar
      tags:
        - avatars
      parameters:
        - name: id
          in: path
          required: true
          description: Avatar owner's id
          schema:
            type: string
      responses:
        '200':
          description: Avatar deleted
          content:
            application/json:
              schema:
                type: string
                example: Successfully deleted avatar of 2c1v3d4d6
        '404':
          description: Avatar not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '401':
          description: Access error
          headers:
            X-Request-ID:
              schema:
                type: string
              description: Request unique identifier.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"

    patch:
      summary: Updates avatar
      tags:
        - avatars
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/InputAvatar'
      parameters:
        - name: id
          in: path
          required: true
          description: Avatar owner's id
          schema:
            type: string
      responses:
        '200':
          description: Avatar updated
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OutputAvatar'
        '404':
          description: Avatar not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '401':
          description: Access error
          headers:
            X-Request-ID:
              schema:
                type: string
              description: Request unique identifier.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
components:
  securitySchemes:
    AuthToken:
      type: apiKey
      in: header
      name: X-Auth-Token
  schemas:
    Status:
      type: object
      properties:
        code:
          type: number
        message:
          type: string
          example: media-server
        data:
          $ref: '#/components/schemas/Health'

    Health:
      type: object
      properties:
        server_status:
          type: string
          example: online
        database_status:
          type: string
          example: online

    InputVideo:
      type: object
      required:
        - video_id
        - name
        - date_created
        - size
        - type
      properties:
        video_id:
          type: string
          example: 32a1sd5fd
          required: true
        name:
          type: string
          example: 0123012-dog
          required: true
        date_created:
          type: string
          required: true
        size:
          type: number
          example: 3215421
          required: true
        type:
          type: string
          example: video/mp4
          required: true

    OutputVideo:
      type: object
      properties:
        video_id:
          type: string
          example: 32a1sd5fd
        name:
          type: string
          example: 0123012-dog
        date_created:
          type: string
        size:
          type: number
          example: 321542
        type:
          type: string
          example: video/mp4
        url:
          type: string
          example: https://storage.googleapis.com/chotuve-grupo8.appspot.com/uploads/videos/..
        thumb:
          type: string
          example: https://storage.googleapis.com/chotuve-grupo8.appspot.com/uploads/videos/..


    InputAvatar:
      type: object
      required:
        - name
        - user_id
      properties:
        name:
          type: string
          example: my-avatar.jpg
          required: true
        user_id:
          type: string
          example: 32a1sd5fd
          required: true

    OutputAvatar:
      type: object
      properties:
        name:
          type: string
          example: my-avatar.jpg
        user_id:
          type: string
          example: 32a1sd5fd
        url:
          type: string
          example: https://storage.googleapis.com/chotuve-grupo8.appspot.com/uploads/avatars/..

    Error:
      type: object
      properties:
        code:
          type: integer
          format: int32
          readOnly: true
          example : -1
        message:
          type: string
          readOnly: true
        data:
          type: object
          readOnly: true
          example: null


